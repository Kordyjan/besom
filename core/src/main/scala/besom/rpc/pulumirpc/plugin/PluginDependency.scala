// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package pulumirpc.plugin

/** PluginDependency is information about a plugin that a program may depend upon.
  *
  * @param name
  *   the name of the plugin.
  * @param kind
  *   the kind of plugin (e.g., language, etc).
  * @param version
  *   the semver for this plugin.
  * @param server
  *   the URL of a server that can be used to download this plugin, if needed.
  */
@SerialVersionUID(0L)
final case class PluginDependency(
    name: _root_.scala.Predef.String = "",
    kind: _root_.scala.Predef.String = "",
    version: _root_.scala.Predef.String = "",
    server: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PluginDependency] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = kind
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = version
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = server
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = kind
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = version
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = server
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withName(__v: _root_.scala.Predef.String): PluginDependency = copy(name = __v)
    def withKind(__v: _root_.scala.Predef.String): PluginDependency = copy(kind = __v)
    def withVersion(__v: _root_.scala.Predef.String): PluginDependency = copy(version = __v)
    def withServer(__v: _root_.scala.Predef.String): PluginDependency = copy(server = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = kind
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = version
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = server
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => _root_.scalapb.descriptors.PString(kind)
        case 3 => _root_.scalapb.descriptors.PString(version)
        case 4 => _root_.scalapb.descriptors.PString(server)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: pulumirpc.plugin.PluginDependency.type = pulumirpc.plugin.PluginDependency
    // @@protoc_insertion_point(GeneratedMessage[pulumirpc.PluginDependency])
}

object PluginDependency extends scalapb.GeneratedMessageCompanion[pulumirpc.plugin.PluginDependency] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[pulumirpc.plugin.PluginDependency] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): pulumirpc.plugin.PluginDependency = {
    var __name: _root_.scala.Predef.String = ""
    var __kind: _root_.scala.Predef.String = ""
    var __version: _root_.scala.Predef.String = ""
    var __server: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __name = _input__.readStringRequireUtf8()
        case 18 =>
          __kind = _input__.readStringRequireUtf8()
        case 26 =>
          __version = _input__.readStringRequireUtf8()
        case 34 =>
          __server = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    pulumirpc.plugin.PluginDependency(
        name = __name,
        kind = __kind,
        version = __version,
        server = __server,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[pulumirpc.plugin.PluginDependency] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      pulumirpc.plugin.PluginDependency(
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        kind = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        version = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        server = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = PluginProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = PluginProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = pulumirpc.plugin.PluginDependency(
    name = "",
    kind = "",
    version = "",
    server = ""
  )
  implicit class PluginDependencyLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, pulumirpc.plugin.PluginDependency]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, pulumirpc.plugin.PluginDependency](_l) {
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def kind: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.kind)((c_, f_) => c_.copy(kind = f_))
    def version: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.version)((c_, f_) => c_.copy(version = f_))
    def server: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.server)((c_, f_) => c_.copy(server = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val KIND_FIELD_NUMBER = 2
  final val VERSION_FIELD_NUMBER = 3
  final val SERVER_FIELD_NUMBER = 4
  def of(
    name: _root_.scala.Predef.String,
    kind: _root_.scala.Predef.String,
    version: _root_.scala.Predef.String,
    server: _root_.scala.Predef.String
  ): _root_.pulumirpc.plugin.PluginDependency = _root_.pulumirpc.plugin.PluginDependency(
    name,
    kind,
    version,
    server
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[pulumirpc.PluginDependency])
}
