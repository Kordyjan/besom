// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package pulumirpc.resource

object ResourceProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.empty.EmptyProto,
    com.google.protobuf.struct.StructProto,
    pulumirpc.provider.ProviderProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      pulumirpc.resource.SupportsFeatureRequest,
      pulumirpc.resource.SupportsFeatureResponse,
      pulumirpc.resource.Alias,
      pulumirpc.resource.ReadResourceRequest,
      pulumirpc.resource.ReadResourceResponse,
      pulumirpc.resource.RegisterResourceRequest,
      pulumirpc.resource.RegisterResourceResponse,
      pulumirpc.resource.RegisterResourceOutputsRequest,
      pulumirpc.resource.ResourceInvokeRequest
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Cg5yZXNvdXJjZS5wcm90bxIJcHVsdW1pcnBjGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8aHGdvb2dsZS9wcm90b2J1Z
  i9zdHJ1Y3QucHJvdG8aDnByb3ZpZGVyLnByb3RvIjEKFlN1cHBvcnRzRmVhdHVyZVJlcXVlc3QSFwoCaWQYASABKAlCB+I/BBICa
  WRSAmlkIkoKF1N1cHBvcnRzRmVhdHVyZVJlc3BvbnNlEi8KCmhhc1N1cHBvcnQYASABKAhCD+I/DBIKaGFzU3VwcG9ydFIKaGFzU
  3VwcG9ydCLeAgoFQWxpYXMSHAoDdXJuGAEgASgJQgjiPwUSA3VybkgAUgN1cm4SNgoEc3BlYxgCIAEoCzIVLnB1bHVtaXJwYy5Bb
  Glhcy5TcGVjQgniPwYSBHNwZWNIAFIEc3BlYxr1AQoEU3BlYxIdCgRuYW1lGAEgASgJQgniPwYSBG5hbWVSBG5hbWUSHQoEdHlwZ
  RgCIAEoCUIJ4j8GEgR0eXBlUgR0eXBlEiAKBXN0YWNrGAMgASgJQgriPwcSBXN0YWNrUgVzdGFjaxImCgdwcm9qZWN0GAQgASgJQ
  gziPwkSB3Byb2plY3RSB3Byb2plY3QSLgoJcGFyZW50VXJuGAUgASgJQg7iPwsSCXBhcmVudFVybkgAUglwYXJlbnRVcm4SKwoIb
  m9QYXJlbnQYBiABKAhCDeI/ChIIbm9QYXJlbnRIAFIIbm9QYXJlbnRCCAoGcGFyZW50QgcKBWFsaWFzIowFChNSZWFkUmVzb3VyY
  2VSZXF1ZXN0EhcKAmlkGAEgASgJQgfiPwQSAmlkUgJpZBIdCgR0eXBlGAIgASgJQgniPwYSBHR5cGVSBHR5cGUSHQoEbmFtZRgDI
  AEoCUIJ4j8GEgRuYW1lUgRuYW1lEiMKBnBhcmVudBgEIAEoCUIL4j8IEgZwYXJlbnRSBnBhcmVudBJICgpwcm9wZXJ0aWVzGAUgA
  SgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdEIP4j8MEgpwcm9wZXJ0aWVzUgpwcm9wZXJ0aWVzEjUKDGRlcGVuZGVuY2llcxgGI
  AMoCUIR4j8OEgxkZXBlbmRlbmNpZXNSDGRlcGVuZGVuY2llcxIpCghwcm92aWRlchgHIAEoCUIN4j8KEghwcm92aWRlclIIcHJvd
  mlkZXISJgoHdmVyc2lvbhgIIAEoCUIM4j8JEgd2ZXJzaW9uUgd2ZXJzaW9uEjgKDWFjY2VwdFNlY3JldHMYCSABKAhCEuI/DxINY
  WNjZXB0U2VjcmV0c1INYWNjZXB0U2VjcmV0cxJWChdhZGRpdGlvbmFsU2VjcmV0T3V0cHV0cxgKIAMoCUIc4j8ZEhdhZGRpdGlvb
  mFsU2VjcmV0T3V0cHV0c1IXYWRkaXRpb25hbFNlY3JldE91dHB1dHMSPgoPYWNjZXB0UmVzb3VyY2VzGAwgASgIQhTiPxESD2FjY
  2VwdFJlc291cmNlc1IPYWNjZXB0UmVzb3VyY2VzEkQKEXBsdWdpbkRvd25sb2FkVVJMGA0gASgJQhbiPxMSEXBsdWdpbkRvd25sb
  2FkVVJMUhFwbHVnaW5Eb3dubG9hZFVSTEoECAsQDFIHYWxpYXNlcyJ8ChRSZWFkUmVzb3VyY2VSZXNwb25zZRIaCgN1cm4YASABK
  AlCCOI/BRIDdXJuUgN1cm4SSAoKcHJvcGVydGllcxgCIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RCD+I/DBIKcHJvcGVyd
  Gllc1IKcHJvcGVydGllcyKjEAoXUmVnaXN0ZXJSZXNvdXJjZVJlcXVlc3QSHQoEdHlwZRgBIAEoCUIJ4j8GEgR0eXBlUgR0eXBlE
  h0KBG5hbWUYAiABKAlCCeI/BhIEbmFtZVIEbmFtZRIjCgZwYXJlbnQYAyABKAlCC+I/CBIGcGFyZW50UgZwYXJlbnQSIwoGY3Vzd
  G9tGAQgASgIQgviPwgSBmN1c3RvbVIGY3VzdG9tEjwKBm9iamVjdBgFIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RCC+I/C
  BIGb2JqZWN0UgZvYmplY3QSJgoHcHJvdGVjdBgGIAEoCEIM4j8JEgdwcm90ZWN0Ugdwcm90ZWN0EjUKDGRlcGVuZGVuY2llcxgHI
  AMoCUIR4j8OEgxkZXBlbmRlbmNpZXNSDGRlcGVuZGVuY2llcxIpCghwcm92aWRlchgIIAEoCUIN4j8KEghwcm92aWRlclIIcHJvd
  mlkZXISiwEKFHByb3BlcnR5RGVwZW5kZW5jaWVzGAkgAygLMjwucHVsdW1pcnBjLlJlZ2lzdGVyUmVzb3VyY2VSZXF1ZXN0LlByb
  3BlcnR5RGVwZW5kZW5jaWVzRW50cnlCGeI/FhIUcHJvcGVydHlEZXBlbmRlbmNpZXNSFHByb3BlcnR5RGVwZW5kZW5jaWVzEkoKE
  2RlbGV0ZUJlZm9yZVJlcGxhY2UYCiABKAhCGOI/FRITZGVsZXRlQmVmb3JlUmVwbGFjZVITZGVsZXRlQmVmb3JlUmVwbGFjZRImC
  gd2ZXJzaW9uGAsgASgJQgziPwkSB3ZlcnNpb25SB3ZlcnNpb24SOAoNaWdub3JlQ2hhbmdlcxgMIAMoCUIS4j8PEg1pZ25vcmVDa
  GFuZ2VzUg1pZ25vcmVDaGFuZ2VzEjgKDWFjY2VwdFNlY3JldHMYDSABKAhCEuI/DxINYWNjZXB0U2VjcmV0c1INYWNjZXB0U2Vjc
  mV0cxJWChdhZGRpdGlvbmFsU2VjcmV0T3V0cHV0cxgOIAMoCUIc4j8ZEhdhZGRpdGlvbmFsU2VjcmV0T3V0cHV0c1IXYWRkaXRpb
  25hbFNlY3JldE91dHB1dHMSMQoKdXJuQWxpYXNlcxgPIAMoCUIRGAHiPwwSCnVybkFsaWFzZXNSCnVybkFsaWFzZXMSKQoIaW1wb
  3J0SWQYECABKAlCDeI/ChIIaW1wb3J0SWRSCGltcG9ydElkEm4KDmN1c3RvbVRpbWVvdXRzGBEgASgLMjEucHVsdW1pcnBjLlJlZ
  2lzdGVyUmVzb3VyY2VSZXF1ZXN0LkN1c3RvbVRpbWVvdXRzQhPiPxASDmN1c3RvbVRpbWVvdXRzUg5jdXN0b21UaW1lb3V0cxJfC
  hpkZWxldGVCZWZvcmVSZXBsYWNlRGVmaW5lZBgSIAEoCEIf4j8cEhpkZWxldGVCZWZvcmVSZXBsYWNlRGVmaW5lZFIaZGVsZXRlQ
  mVmb3JlUmVwbGFjZURlZmluZWQSUAoVc3VwcG9ydHNQYXJ0aWFsVmFsdWVzGBMgASgIQhriPxcSFXN1cHBvcnRzUGFydGlhbFZhb
  HVlc1IVc3VwcG9ydHNQYXJ0aWFsVmFsdWVzEiMKBnJlbW90ZRgUIAEoCEIL4j8IEgZyZW1vdGVSBnJlbW90ZRI+Cg9hY2NlcHRSZ
  XNvdXJjZXMYFSABKAhCFOI/ERIPYWNjZXB0UmVzb3VyY2VzUg9hY2NlcHRSZXNvdXJjZXMSXwoJcHJvdmlkZXJzGBYgAygLMjEuc
  HVsdW1pcnBjLlJlZ2lzdGVyUmVzb3VyY2VSZXF1ZXN0LlByb3ZpZGVyc0VudHJ5Qg7iPwsSCXByb3ZpZGVyc1IJcHJvdmlkZXJzE
  kEKEHJlcGxhY2VPbkNoYW5nZXMYFyADKAlCFeI/EhIQcmVwbGFjZU9uQ2hhbmdlc1IQcmVwbGFjZU9uQ2hhbmdlcxJEChFwbHVna
  W5Eb3dubG9hZFVSTBgYIAEoCUIW4j8TEhFwbHVnaW5Eb3dubG9hZFVSTFIRcGx1Z2luRG93bmxvYWRVUkwSOwoOcmV0YWluT25EZ
  WxldGUYGSABKAhCE+I/EBIOcmV0YWluT25EZWxldGVSDnJldGFpbk9uRGVsZXRlEjgKB2FsaWFzZXMYGiADKAsyEC5wdWx1bWlyc
  GMuQWxpYXNCDOI/CRIHYWxpYXNlc1IHYWxpYXNlcxo1ChRQcm9wZXJ0eURlcGVuZGVuY2llcxIdCgR1cm5zGAEgAygJQgniPwYSB
  HVybnNSBHVybnMafwoOQ3VzdG9tVGltZW91dHMSIwoGY3JlYXRlGAEgASgJQgviPwgSBmNyZWF0ZVIGY3JlYXRlEiMKBnVwZGF0Z
  RgCIAEoCUIL4j8IEgZ1cGRhdGVSBnVwZGF0ZRIjCgZkZWxldGUYAyABKAlCC+I/CBIGZGVsZXRlUgZkZWxldGUalgEKGVByb3Blc
  nR5RGVwZW5kZW5jaWVzRW50cnkSGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa2V5ElkKBXZhbHVlGAIgASgLMjcucHVsdW1pcnBjL
  lJlZ2lzdGVyUmVzb3VyY2VSZXF1ZXN0LlByb3BlcnR5RGVwZW5kZW5jaWVzQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEaUgoOUHJvd
  mlkZXJzRW50cnkSGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa2V5EiAKBXZhbHVlGAIgASgJQgriPwcSBXZhbHVlUgV2YWx1ZToCO
  AEiugQKGFJlZ2lzdGVyUmVzb3VyY2VSZXNwb25zZRIaCgN1cm4YASABKAlCCOI/BRIDdXJuUgN1cm4SFwoCaWQYAiABKAlCB+I/B
  BICaWRSAmlkEjwKBm9iamVjdBgDIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RCC+I/CBIGb2JqZWN0UgZvYmplY3QSIwoGc
  3RhYmxlGAQgASgIQgviPwgSBnN0YWJsZVIGc3RhYmxlEiYKB3N0YWJsZXMYBSADKAlCDOI/CRIHc3RhYmxlc1IHc3RhYmxlcxKMA
  QoUcHJvcGVydHlEZXBlbmRlbmNpZXMYBiADKAsyPS5wdWx1bWlycGMuUmVnaXN0ZXJSZXNvdXJjZVJlc3BvbnNlLlByb3BlcnR5R
  GVwZW5kZW5jaWVzRW50cnlCGeI/FhIUcHJvcGVydHlEZXBlbmRlbmNpZXNSFHByb3BlcnR5RGVwZW5kZW5jaWVzGjUKFFByb3Blc
  nR5RGVwZW5kZW5jaWVzEh0KBHVybnMYASADKAlCCeI/BhIEdXJuc1IEdXJucxqXAQoZUHJvcGVydHlEZXBlbmRlbmNpZXNFbnRye
  RIaCgNrZXkYASABKAlCCOI/BRIDa2V5UgNrZXkSWgoFdmFsdWUYAiABKAsyOC5wdWx1bWlycGMuUmVnaXN0ZXJSZXNvdXJjZVJlc
  3BvbnNlLlByb3BlcnR5RGVwZW5kZW5jaWVzQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEifQoeUmVnaXN0ZXJSZXNvdXJjZU91dHB1d
  HNSZXF1ZXN0EhoKA3VybhgBIAEoCUII4j8FEgN1cm5SA3VybhI/CgdvdXRwdXRzGAIgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0c
  nVjdEIM4j8JEgdvdXRwdXRzUgdvdXRwdXRzIsQCChVSZXNvdXJjZUludm9rZVJlcXVlc3QSGgoDdG9rGAEgASgJQgjiPwUSA3Rva
  1IDdG9rEjYKBGFyZ3MYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0QgniPwYSBGFyZ3NSBGFyZ3MSKQoIcHJvdmlkZXIYA
  yABKAlCDeI/ChIIcHJvdmlkZXJSCHByb3ZpZGVyEiYKB3ZlcnNpb24YBCABKAlCDOI/CRIHdmVyc2lvblIHdmVyc2lvbhI+Cg9hY
  2NlcHRSZXNvdXJjZXMYBSABKAhCFOI/ERIPYWNjZXB0UmVzb3VyY2VzUg9hY2NlcHRSZXNvdXJjZXMSRAoRcGx1Z2luRG93bmxvY
  WRVUkwYBiABKAlCFuI/ExIRcGx1Z2luRG93bmxvYWRVUkxSEXBsdWdpbkRvd25sb2FkVVJMMtQECg9SZXNvdXJjZU1vbml0b3ISW
  goPU3VwcG9ydHNGZWF0dXJlEiEucHVsdW1pcnBjLlN1cHBvcnRzRmVhdHVyZVJlcXVlc3QaIi5wdWx1bWlycGMuU3VwcG9ydHNGZ
  WF0dXJlUmVzcG9uc2UiABJHCgZJbnZva2USIC5wdWx1bWlycGMuUmVzb3VyY2VJbnZva2VSZXF1ZXN0GhkucHVsdW1pcnBjLklud
  m9rZVJlc3BvbnNlIgASTwoMU3RyZWFtSW52b2tlEiAucHVsdW1pcnBjLlJlc291cmNlSW52b2tlUmVxdWVzdBoZLnB1bHVtaXJwY
  y5JbnZva2VSZXNwb25zZSIAMAESOQoEQ2FsbBIWLnB1bHVtaXJwYy5DYWxsUmVxdWVzdBoXLnB1bHVtaXJwYy5DYWxsUmVzcG9uc
  2UiABJRCgxSZWFkUmVzb3VyY2USHi5wdWx1bWlycGMuUmVhZFJlc291cmNlUmVxdWVzdBofLnB1bHVtaXJwYy5SZWFkUmVzb3VyY
  2VSZXNwb25zZSIAEl0KEFJlZ2lzdGVyUmVzb3VyY2USIi5wdWx1bWlycGMuUmVnaXN0ZXJSZXNvdXJjZVJlcXVlc3QaIy5wdWx1b
  WlycGMuUmVnaXN0ZXJSZXNvdXJjZVJlc3BvbnNlIgASXgoXUmVnaXN0ZXJSZXNvdXJjZU91dHB1dHMSKS5wdWx1bWlycGMuUmVna
  XN0ZXJSZXNvdXJjZU91dHB1dHNSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgBCMFouZ2l0aHViLmNvbS9wdWx1bWkvc
  HVsdW1pL3YzL3Byb3RvL2dvL3B1bHVtaXJwY2IGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.empty.EmptyProto.javaDescriptor,
      com.google.protobuf.struct.StructProto.javaDescriptor,
      pulumirpc.provider.ProviderProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}