// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package pulumirpc.analyzer

/** PolicyInfo provides metadata about a policy within a Policy Pack.
  *
  * @param name
  *   Name of the policy.
  * @param displayName
  *   Pretty name for the policy.
  * @param description
  *   Description of policy rule. e.g., "encryption enabled."
  * @param message
  *   Message to display on policy violation, e.g., remediation steps.
  * @param enforcementLevel
  *   Severity of the policy violation.
  * @param configSchema
  *   Config schema for the policy.
  */
@SerialVersionUID(0L)
final case class PolicyInfo(
    name: _root_.scala.Predef.String = "",
    displayName: _root_.scala.Predef.String = "",
    description: _root_.scala.Predef.String = "",
    message: _root_.scala.Predef.String = "",
    enforcementLevel: pulumirpc.analyzer.EnforcementLevel = pulumirpc.analyzer.EnforcementLevel.ADVISORY,
    configSchema: _root_.scala.Option[pulumirpc.analyzer.PolicyConfigSchema] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PolicyInfo] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = displayName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = description
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = message
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = enforcementLevel.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, __value)
        }
      };
      if (configSchema.isDefined) {
        val __value = configSchema.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = displayName
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = description
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = message
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = enforcementLevel.value
        if (__v != 0) {
          _output__.writeEnum(5, __v)
        }
      };
      configSchema.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withName(__v: _root_.scala.Predef.String): PolicyInfo = copy(name = __v)
    def withDisplayName(__v: _root_.scala.Predef.String): PolicyInfo = copy(displayName = __v)
    def withDescription(__v: _root_.scala.Predef.String): PolicyInfo = copy(description = __v)
    def withMessage(__v: _root_.scala.Predef.String): PolicyInfo = copy(message = __v)
    def withEnforcementLevel(__v: pulumirpc.analyzer.EnforcementLevel): PolicyInfo = copy(enforcementLevel = __v)
    def getConfigSchema: pulumirpc.analyzer.PolicyConfigSchema = configSchema.getOrElse(pulumirpc.analyzer.PolicyConfigSchema.defaultInstance)
    def clearConfigSchema: PolicyInfo = copy(configSchema = _root_.scala.None)
    def withConfigSchema(__v: pulumirpc.analyzer.PolicyConfigSchema): PolicyInfo = copy(configSchema = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = displayName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = description
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = message
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = enforcementLevel.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 6 => configSchema.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => _root_.scalapb.descriptors.PString(displayName)
        case 3 => _root_.scalapb.descriptors.PString(description)
        case 4 => _root_.scalapb.descriptors.PString(message)
        case 5 => _root_.scalapb.descriptors.PEnum(enforcementLevel.scalaValueDescriptor)
        case 6 => configSchema.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: pulumirpc.analyzer.PolicyInfo.type = pulumirpc.analyzer.PolicyInfo
    // @@protoc_insertion_point(GeneratedMessage[pulumirpc.PolicyInfo])
}

object PolicyInfo extends scalapb.GeneratedMessageCompanion[pulumirpc.analyzer.PolicyInfo] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[pulumirpc.analyzer.PolicyInfo] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): pulumirpc.analyzer.PolicyInfo = {
    var __name: _root_.scala.Predef.String = ""
    var __displayName: _root_.scala.Predef.String = ""
    var __description: _root_.scala.Predef.String = ""
    var __message: _root_.scala.Predef.String = ""
    var __enforcementLevel: pulumirpc.analyzer.EnforcementLevel = pulumirpc.analyzer.EnforcementLevel.ADVISORY
    var __configSchema: _root_.scala.Option[pulumirpc.analyzer.PolicyConfigSchema] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __name = _input__.readStringRequireUtf8()
        case 18 =>
          __displayName = _input__.readStringRequireUtf8()
        case 26 =>
          __description = _input__.readStringRequireUtf8()
        case 34 =>
          __message = _input__.readStringRequireUtf8()
        case 40 =>
          __enforcementLevel = pulumirpc.analyzer.EnforcementLevel.fromValue(_input__.readEnum())
        case 50 =>
          __configSchema = Option(__configSchema.fold(_root_.scalapb.LiteParser.readMessage[pulumirpc.analyzer.PolicyConfigSchema](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    pulumirpc.analyzer.PolicyInfo(
        name = __name,
        displayName = __displayName,
        description = __description,
        message = __message,
        enforcementLevel = __enforcementLevel,
        configSchema = __configSchema,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[pulumirpc.analyzer.PolicyInfo] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      pulumirpc.analyzer.PolicyInfo(
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        displayName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        message = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        enforcementLevel = pulumirpc.analyzer.EnforcementLevel.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(pulumirpc.analyzer.EnforcementLevel.ADVISORY.scalaValueDescriptor).number),
        configSchema = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[pulumirpc.analyzer.PolicyConfigSchema]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AnalyzerProto.javaDescriptor.getMessageTypes().get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AnalyzerProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 6 => __out = pulumirpc.analyzer.PolicyConfigSchema
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 5 => pulumirpc.analyzer.EnforcementLevel
    }
  }
  lazy val defaultInstance = pulumirpc.analyzer.PolicyInfo(
    name = "",
    displayName = "",
    description = "",
    message = "",
    enforcementLevel = pulumirpc.analyzer.EnforcementLevel.ADVISORY,
    configSchema = _root_.scala.None
  )
  implicit class PolicyInfoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, pulumirpc.analyzer.PolicyInfo]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, pulumirpc.analyzer.PolicyInfo](_l) {
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def displayName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.displayName)((c_, f_) => c_.copy(displayName = f_))
    def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def message: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.message)((c_, f_) => c_.copy(message = f_))
    def enforcementLevel: _root_.scalapb.lenses.Lens[UpperPB, pulumirpc.analyzer.EnforcementLevel] = field(_.enforcementLevel)((c_, f_) => c_.copy(enforcementLevel = f_))
    def configSchema: _root_.scalapb.lenses.Lens[UpperPB, pulumirpc.analyzer.PolicyConfigSchema] = field(_.getConfigSchema)((c_, f_) => c_.copy(configSchema = Option(f_)))
    def optionalConfigSchema: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[pulumirpc.analyzer.PolicyConfigSchema]] = field(_.configSchema)((c_, f_) => c_.copy(configSchema = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val DISPLAYNAME_FIELD_NUMBER = 2
  final val DESCRIPTION_FIELD_NUMBER = 3
  final val MESSAGE_FIELD_NUMBER = 4
  final val ENFORCEMENTLEVEL_FIELD_NUMBER = 5
  final val CONFIGSCHEMA_FIELD_NUMBER = 6
  def of(
    name: _root_.scala.Predef.String,
    displayName: _root_.scala.Predef.String,
    description: _root_.scala.Predef.String,
    message: _root_.scala.Predef.String,
    enforcementLevel: pulumirpc.analyzer.EnforcementLevel,
    configSchema: _root_.scala.Option[pulumirpc.analyzer.PolicyConfigSchema]
  ): _root_.pulumirpc.analyzer.PolicyInfo = _root_.pulumirpc.analyzer.PolicyInfo(
    name,
    displayName,
    description,
    message,
    enforcementLevel,
    configSchema
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[pulumirpc.PolicyInfo])
}
